import java.util.*;
public class Heaps {
    
    static class Windows implements Comparable<Windows>{
        int val;
        int idx;

        public Windows(int val,int idx){
            this.val = val;
            this.idx = idx;
        }
        @Override
        public int compareTo(Windows w2){
            //descending order
            return w2.val - this.val;
    }

    public static void main(String[] args) {
        int arr[] = {1,3,-1,-3,5,3,6,7};
        int k = 3;
        int res[] = new int[arr.length-k+1];
        
        PriorityQueue<Windows> pq = new PriorityQueue<Windows>();

        for(int i = 0;i<k;i++){
            pq.add(new Windows(arr[i], i));
        }
        res[0] = pq.peek().val;

        for(int i=k;i<arr.length;i++){
            while(pq.size() > 0 && pq.peek().idx <= (i-k)){
                pq.remove();
            }
            pq.add(new Windows(arr[i], i));
            res[i-k+1] = pq.peek().val;
        }
        for(int i=0;i<res.length;i++){
            System.out.print(res[i]+" ");
        }
    }
    }
}
